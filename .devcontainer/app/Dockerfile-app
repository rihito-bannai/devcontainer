# Dockerfileのベストプラクティス→ http://docs.docker.jp/develop/develop-images/Dockerfile-best-practices.html
# Pythonのtarファイル→ https://www.python.org/downloads/source/

ARG UBUNTU_VER

FROM ubuntu:${UBUNTU_VER}

EXPOSE 8000

ARG PYTHON3_VER \
    POETRY_VER \
    MODE \
    PROJECT_NAME \
    DJANGO_MAJOR_VER \
    DJANGO_MINOR_VER \
    ENVIRONS \
    GIT_EMAIL \
    GIT_NAME \
    GIT_CORE_EDITOR

# "RUN export"で環境変数を設定することはできない
ENV LANG=ja_JP.UTF-8 \
    POETRY_HOME=/home/lib/poetry \
    PATH=/home/lib/poetry/bin:$PATH

# "apt list --installed | <パッケージ名>" でパッケージのバージョンを確認し、
# "<パッケージ名>=<バージョン>"でバージョン指定  Ex.) tzdata=2022a-0ubuntu0.20.04
RUN apt update \
    && apt install -y \
    tzdata

RUN apt install -y \
    build-essential \
    libbz2-dev \
    libdb-dev \
    libreadline-dev \
    libffi-dev \
    libgdbm-dev \
    liblzma-dev \
    libncursesw5-dev \
    libsqlite3-dev \
    libssl-dev \
    zlib1g-dev \
    uuid-dev \
    tk-dev \
    wget \
    git \
    curl \
    sudo \
    && mkdir -p /home/lib/python3 \
    && cd /home/lib/python3 \
    && wget https://www.python.org/ftp/python/${PYTHON3_VER}/Python-${PYTHON3_VER}.tgz \
    && tar xvf Python-${PYTHON3_VER}.tgz \
    && cd Python-${PYTHON3_VER} \
    && ./configure \
    && make \
    && make install \
    && python3 -m pip install --upgrade pip \
    && apt clean \
    && rm -rf /var/lib/apt/lists/* \
    && curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 - --version ${POETRY_VER}

# CMD [ "bash", "/home/workspace/.devcontainer/app/${MODE}_app/${MODE}-app.sh", "${MODE}", "${PROJECT_NAME}", "${DJANGO_MAJOR_VER}", "${DJANGO_MINOR_VER}", "${ENVIRONS}", "${GIT_EMAIL}", "${GIT_NAME}", "${GIT_CORE_EDITOR}" ]
# CMD bash /home/workspace/.devcontainer/app/create_app/create-app.sh create your_project 3.2 13 9.5.0 your@example.com rihib wait
CMD [ "bash", "/home/workspace/.devcontainer/app/create_app/create-app.sh", "create", "your_project", "3.2", "13", "9.5.0", "your@example.com", "rihib", "wait" ]